syntax = "proto3";

package top.criwits.scaleda.kernel.net;

service Remote {
  rpc Run(RunRequest) returns (stream RunReply) {}
  rpc GetProfiles(Empty) returns (ProfilesReply) {}
  rpc GetRemoteInfo(Empty) returns (RemoteInfo) {}
}

service RemoteRegisterLogin {
  rpc Register(RemoteRegisterRequest) returns (RemoteRegisterReply) {}
  rpc Login(RemoteLoginRequest) returns (RemoteLoginReply) {}
  rpc Refresh(RemoteRefreshRequest) returns (RemoteRefreshReply) {}
}

message RemoteRegisterRequest {
  string username = 1;
  string password = 2;
  string nickname = 3;
}
message RemoteRegisterReply {
  bool ok = 1;
  string reason = 2;
}
message RemoteLoginRequest {
  string username = 1;
  string password = 2;
}
message RemoteLoginReply {
  bool ok = 1;
  string refreshToken = 2;
  string token = 3;
  string reason = 4;
}
message RemoteRefreshRequest {
  string refreshToken = 1;
}
message RemoteRefreshReply {
  bool ok = 1;
  string token = 2;
  string reason = 3;
}

message Empty {}

message StringTriple {
  string a = 1;
  string b = 2;
}

message RunRequest {
  repeated string commands = 1;
  string path = 2;
  repeated StringTriple envs = 3;
  string projectBase = 4;
}

enum RunReplyType {
  RUN_REPLY_TYPE_RETURN = 0;
  RUN_REPLY_TYPE_STDOUT = 1;
  RUN_REPLY_TYPE_STDERR = 2;
  RUN_REPLY_TYPE_ERR_AUTH = 3;
}

message RunReply {
  RunReplyType reply_type = 1;
  string str_value = 2;
  int32 int_value = 3;
  bool finishedAll = 4;
  bool meetErrors = 5;
}

// Note that these value cannot be null!!!
message RemoteProfile {
  string profileName = 1;
  string toolchainType = 2;
  string path = 3;
  string iverilogPath = 4;
  string vvpPath = 5;
  string iverilogVPIPath = 6;
}
message ProfilesReply {
  repeated RemoteProfile profiles = 1;
}

enum RemoteOsType {
  REMOTE_OS_TYPE_LINUX = 0;
  REMOTE_OS_TYPE_WINDOWS = 1;
  REMOTE_OS_TYPE_MACOS = 2;
}
message RemoteInfo {
  RemoteOsType os = 1;
  string tempPrefix = 2;
}